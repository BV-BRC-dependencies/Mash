Mash is normally distributed as a dependency-free binary for Linux or OSX (see
https://github.com/marbl/Mash/releases). This source distribution is intended
for other operating systems or for development. Mash requires c++11 to build,
which is available in and GCC >= 4.8 and OSX >= 10.7.

See http://mash.readthedocs.org for more information.

Dependencies:
-------------
   - Autoconf ( http://www.gnu.org/software/autoconf/ )
   - Cap'n Proto ( https://capnproto.org/ )
   - either...
       GNU Scientific Library ( http://www.gnu.org/software/gsl/ )
     or..
       Boost Library ( http://www.boost.org ) (see "-with-boost" below)
   - Zlib ( included with OS X and most Linuxes, http://www.zlib.net )


Steps:
------
   ./bootstrap.sh
   ./configure [--prefix=...] [--with-capnp=...] [--with-gsl=...] \
               [--with-boost=...]
   make
   [sudo] make install


Products:
---------
   - command line tool ( <prefix>/bin/mash )
   - static library ( <prefix>/lib/libmash.a )
   - includes ( <prefix>/include/mash/ )


Deployment:
-----------
OSX
  Mash can be built on any OSX version starting with 10.7 (XCode command line
  tools >= 4.6), and the binary should work across the same range of versions,
  regardless of the particular version it was built with.
Linux
  Mash must be built with at least GCC 4.8 due to its c++11 dependency. However,
  the resulting binary can run on Linux with older GCC libraries if libstdc++ is
  linked statically. To do this, ensure that you have a statically built library
  (libstdc++.a) and add "-static-libstdc++" to $CPPFLAGS before running "make".
  You may also need to use "-L <dir>"in $CPPFLAGS to tell GCC where to find
  libstdc++.a.


Notes:
------
* When running ./configure, use --prefix to install somewhere other than
  /usr/local.
* Sudo will be necessary for 'make install' if write permission
  is not available in --prefix (e.g. by default).
* Use --with-capnp=... or --with-gsl if the Cap'n Proto or GNU Scientific
  libraries are not in the default location (/usr/local). These should absolute
  paths and should not include "bin" or "lib".
* Use --with-boost=... to provide the location to Boost, which will then be use
  instead of GSL.
* If Zlib is not installed in a standard system location (it usually is),
  CXXFLAGS and LDFLAGS will have to be modified before making.
